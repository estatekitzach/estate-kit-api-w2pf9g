apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: estatekit-ingress
  namespace: estatekit
  labels:
    app: estatekit
    component: ingress
    environment: production
  annotations:
    # AWS Load Balancer Controller configuration
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: ${ACM_CERTIFICATE_ARN}
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    alb.ingress.kubernetes.io/waf-acl-id: ${WAF_ACL_ID}
    alb.ingress.kubernetes.io/security-groups: ${SECURITY_GROUP_IDS}
    
    # Health Check Configuration
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    
    # Load Balancer Attributes
    alb.ingress.kubernetes.io/load-balancer-attributes: >-
      idle_timeout.timeout_seconds=60,
      routing.http2.enabled=true
    
    # Target Group Attributes
    alb.ingress.kubernetes.io/target-group-attributes: >-
      deregistration_delay.timeout_seconds=30,
      slow_start.duration_seconds=30
    
    # Rate Limiting Configuration
    alb.ingress.kubernetes.io/actions.rate-limit: >-
      {
        "type": "fixed-response",
        "fixedResponseConfig": {
          "contentType": "application/json",
          "statusCode": "429",
          "messageBody": "{\"error\":\"rate limit exceeded\"}"
        }
      }
    alb.ingress.kubernetes.io/conditions.rate-limit: >-
      [
        {
          "field": "http-request-rate",
          "httpRequestRate": {
            "limit": 1000,
            "burst": 2000,
            "period": "1m"
          }
        }
      ]

spec:
  rules:
    # Business API (GraphQL) Routing
    - host: api.estatekit.com
      http:
        paths:
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: business-api
                port:
                  number: 80
    
    # Data API (REST) Routing
    - host: data.estatekit.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: data-api
                port:
                  number: 80
  
  # TLS Configuration
  tls:
    - hosts:
        - api.estatekit.com
        - data.estatekit.com
      secretName: estatekit-tls