apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cache
  namespace: estatekit
  labels:
    app: estatekit
    component: cache
    tier: data
  annotations:
    security.kubernetes.io/tls-enabled: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: estatekit
      component: cache
  template:
    metadata:
      labels:
        app: estatekit
        component: cache
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: estatekit
                  component: cache
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
        - name: redis
          image: redis:7.0
          ports:
            - containerPort: 6379
              protocol: TCP
          resources:
            requests:
              cpu: "1"
              memory: "8Gi"
            limits:
              cpu: "2"
              memory: "10Gi"
          volumeMounts:
            - name: redis-config
              mountPath: /usr/local/etc/redis
            - name: redis-data
              mountPath: /data
            - name: redis-certs
              mountPath: /etc/redis/certs
              readOnly: true
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data-pvc
        - name: redis-certs
          secret:
            secretName: redis-certs